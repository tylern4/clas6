#! gnumake

#---------------------------------------------------
# The D. P. Weygand Makefile
#---------------------------------------------------
include $(CLAS_CMS)/Rules.make

ifdef USEBOSIO
BOSLIB= -lbosio$(ADD_DEBUG)
else
BOSLIB = -lfputil$(ADD_DEBUG) -lbos$(ADD_DEBUG) -lfpack$(ADD_DEBUG)
endif

STDLIBS= -L$(LOCAL_LIB) -L$(CLAS_LIB)   -lclasEvent$(ADD_DEBUG) -ltxtEvent$(ADD_DEBUG)  -leloss$(ADD_DEBUG) -lmomentum_correction$(ADD_DEBUG) -lg10pcor$(ADD_DEBUG) -lPcor$(ADD_DEBUG) -lvkTAGR$(ADD_DEBUG) -lplib$(ADD_DEBUG) -lpid$(ADD_DEBUG) -lec$(ADD_DEBUG) -lcc$(ADD_DEBUG) -lsc$(ADD_DEBUG) -ltrk$(ADD_DEBUG) -ldc$(ADD_DEBUG) -llac$(ADD_DEBUG) -lst$(ADD_DEBUG)  -lpid$(ADD_DEBUG) -ltag$(ADD_DEBUG) -ltagM$(ADD_DEBUG) -lscaler$(ADD_DEBUG) -lvertex$(ADD_DEBUG) -lbankdefs$(ADD_DEBUG) -lclasutil$(ADD_DEBUG)   -lc_bos_io$(ADD_DEBUG) -lrecutl$(ADD_DEBUG) -litape$(ADD_DEBUG) $(BOSLIB) -lc_bos_io$(ADD_DEBUG) -lmapmanager$(ADD_DEBUG)  -lonline_dummy$(ADD_DEBUG) -lc_cern$(ADD_DEBUG) -lpp$(ADD_DEBUG) -lpwaUtil$(ADD_DEBUG) 

#use the newest cern library
CERNPATH= $(CERN_ROOT)/lib
CERNLIB= -L$(CERNPATH)  -lpacklib -lmathlib -lkernlib
MATHLIB= -lm 

FINCLUDE := $(FINCLUDE) -I./include
INCLUDE := $(INCLUDE) -I./include 
CCCSRCS:= 

CCSRCS:=  txtEvent.cc 

fSRCS:=  

FSRCS:=  

SRCS:=  

fOBJS= $(patsubst %.f,$(OBJDIR)/%.o,$(fSRCS))
FOBJS= $(patsubst %.F,$(OBJDIR)/%.o,$(FSRCS))
OBJS= $(patsubst %.c,$(OBJDIR)/%.o,$(SRCS))

CCOBJS= $(patsubst %.cc,$(OBJDIR)/%.o,$(CCSRCS))

CCCOBJS= $(patsubst %.C,$(OBJDIR)/%.o,$(CCCSRCS))

bos2txtEventSRCS= bos2txtEvent.cc
bos2txtEventOBJS= $(patsubst %.cc,$(OBJDIR)/%.o,$(bos2txtEventSRCS))

countEventSRCS= countEvent.cc
countEventOBJS= $(patsubst %.cc,$(OBJDIR)/%.o,$(countEventSRCS))

eventWeightsSRCS= eventWeights.cc
eventWeightsOBJS= $(patsubst %.cc,$(OBJDIR)/%.o,$(eventWeightsSRCS))

txtEvent2bosSRCS= txtEvent2bos.cc
txtEvent2bosOBJS= $(patsubst %.cc,$(OBJDIR)/%.o,$(txtEvent2bosSRCS))

bos2txtEvent: $(bos2txtEventOBJS)
	$(C++) $(CDBG) $(CFLAGS) $(INCLUDE) -o $@ $^ $(STDLIBS) $(CERNLIB) $(FLIB) $(FLIB_NATIVE) $(MATHLIB)

countEvent: $(countEventOBJS)
	$(C++) $(CDBG) $(CFLAGS) $(INCLUDE) -o $@ $^ $(STDLIBS) $(CERNLIB) $(FLIB) $(FLIB_NATIVE) $(MATHLIB)

eventWeights: $(eventWeightsOBJS)
	$(C++) $(CDBG) $(CFLAGS) $(INCLUDE) -o $@ $^ $(STDLIBS) $(CERNLIB) $(FLIB) $(FLIB_NATIVE) $(MATHLIB)

txtEvent2bos: $(txtEvent2bosOBJS)
	$(C++) $(CDBG) $(CFLAGS) $(INCLUDE) -o $@ $^ $(STDLIBS) $(CERNLIB) $(FLIB) $(FLIB_NATIVE) $(MATHLIB)

all: lib  bos2txtEvent countEvent eventWeights txtEvent2bos install

LIBS= $(LOCAL_LIB)/libtxtEvent$(ADD_DEBUG).a
lib: $(LIBS)

$(LIBS): $(OBJS) $(FOBJS) $(fOBJS) $(CCOBJS) $(CCCOBJS)
	$(VDIR) $(LOCAL_LIB)
	ar rv $@ $?
install:  bos2txtEvent countEvent eventWeights txtEvent2bos
	$(VDIR) $(LOCAL_BIN)
	/usr/bin/install  bos2txtEvent $(LOCAL_BIN)
	/usr/bin/install  countEvent $(LOCAL_BIN)
	/usr/bin/install  eventWeights $(LOCAL_BIN)
	/usr/bin/install  txtEvent2bos $(LOCAL_BIN)
	/usr/bin/install txtEvent.h $(LOCAL_INC)
env:
	@echo EXE $(EXE)
	@echo LIBS $(LIBS)
	@echo CC $(CC)
	@echo FC $(FC)
	@echo OS_NAME $(OS_NAME)
	@echo INCLUDE $(INCLUDE)
	@echo BOSPATH $(BOSPATH)
	@echo FLIB $(FLIB)
	@echo OBJS $(OBJS)
	@echo CFLAGS $(CFLAGS)
	@echo FFLAGS $(FFLAGS)
	@echo CCLAGS $(CCFAGS)
	@echo INCLUDE $(INCLUDE)
	@echo LOCAL_LIB $(LOCAL_LIB)
	@echo LOCAL_BIN $(LOCAL_BIN)
	@echo LOCAL_INCLUDE $(LOCAL_INCLUDE)
	@echo OBJDIR $(OBJDIR)
	@echo STDLIBS $(STDLIBS)
