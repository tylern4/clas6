// Autogenerated Class (Header File)
// Author : G.Gavalian
// Date   : Fri Mar 30 10:47:42 EST 2007
//

#ifndef __TGuiStudio__
#define __TGuiStudio__
#include <iostream>
#include <TROOT.h>
#include <TVector3.h>
#include <TObject.h>

#ifndef ROOT_TGFrame
#include "TGFrame.h"
#endif
#ifndef ROOT_TDatime
#include "TDatime.h"
#endif
//#include "TFrameNtUtuls.h"
#ifndef ROOT_TGListBox
#include <TGListBox.h>
#endif
#include "TFrameTitle.h"
#include "TFrameTabView.h"
#include "TFrameContainer.h"
#include <TGStatusBar.h>
#include <TGMenu.h>
#include <TGFileDialog.h>
#include "TCTEventSelector.h"

class TGMenuBar;
class TGPopupMenu;
class GTitleFrame;
class GButtonFrame;
class TGButton;
class TGListTree;
class TGListTreeItem;
class TRootEmbeddedCanvas;
class TGCanvas;
class TGStatusBar;
class TGTextEdit;
class TGTab;
class TCanvas;
class TPad;
class MyEvent;
class TEnv;
class TTimer;
class TH1F;
class TGToolBar;

class TGuiStudio :  public TGMainFrame {

private:

  TGStatusBar        *fStatusBar;
  //  TFrameNtUtuls      *fFrNtUtils;
  TFrameContainer    *fFrContainer;
  TGCompositeFrame   *fSelectionFrame;
  TFrameTabView      *fTabView;
  TFrameTitle        *fTitleView;
  TGMenuBar          *fMenuBar;

 /*  TCTEventSelector   fEventSelector; */
/*   TDSTReader         fDSTReader; */

  TGPopupMenu        *fMenuFile;          // "File" popup menu
  TGPopupMenu        *fMenuEvent;         // "Event" popup menu
  TGPopupMenu        *fMenuTools;         // "Tools" popup menu
  TGPopupMenu        *fMenuView;          // "View" popup menu
  TGPopupMenu        *fMenuHelp;          // "Help" popup menu
  TGPopupMenu        *fMenuPrint;          // "Help" popup menu

  TCTEventSelector    fEventSelector;
  TDSTReader          fDSTReader;
  TCTContainer        fContainer;
  TCTBeamSelector     fBeamSelector;

public:

TGuiStudio (const TGWindow *p, UInt_t w, UInt_t h);
virtual ~TGuiStudio ();

 void    MakeMenuBar();
 void    AddMessage(const char *mess);
 void    ActivateCanvas();
 void    UpdateCanvas();
 void    LoadProject(const char *prj_name);

 void    InitFile(const char *_file_pattern);
 void    LoadFromXML(const char *_xml_file);
 virtual Bool_t   ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2);
 
 void    SaveHist();
 void    SaveAsCanvas();
 void    PrintCanvas(const char *name);
 void    Draw(const char *_var_name, const char *_var_condition = "");
 void    Run(int n_events = 20000);

 void    _cmd_SaveNtuple();

ClassDef(TGuiStudio,1)


};

extern TGuiStudio   *gGuiStudio;

#endif
