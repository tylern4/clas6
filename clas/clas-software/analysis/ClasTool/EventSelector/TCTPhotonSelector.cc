// Autogenerated Class (Source File)
// Author : G.Gavalian
// Date   : Mon Apr  2 18:27:33 EDT 2007
//

#include "TCTPhotonSelector.h"



ClassImp(TCTPhotonSelector)


TCTPhotonSelector::TCTPhotonSelector (){

}

TCTPhotonSelector::~TCTPhotonSelector (){

}

//-----------------
//-----------------
//-----------------
Int_t      TCTPhotonSelector::GetNGTime(double interval)
{

  TString  fReaderType = fReader->GetReaderType();
  //  printf("[%s]\n",fReaderType.Data());
  if(strncmp(fReaderType.Data(),"ROOTMINIDSTR",12)==0){
    //    printf("This is a miniDST Reader.....ahhhaaaa...\n");
    return 1;
  }
  Int_t N_TAGR = fReader->GetNRows( "TAGR" );
  //  printf("NTAGR = %d\n",N_TAGR);
  //  if(N_TAGR<1) return;
  Int_t   N_G_Time = 0;
  //  double  best_time_diff = 100;
  double  starttime      = GetSTT();
  for(int idx=0;idx<N_TAGR;idx++){
    TTAGRClass* tagr = static_cast<TTAGRClass*>( fReader->GetBankRow( "TAGR", idx ) );
    Double_t   tagtime = tagr->GetTagTime();
    Double_t   current_time_diff = tagtime - starttime;
    if(fabs(current_time_diff)<interval) N_G_Time++;
  }
  return N_G_Time;
}

Double_t   TCTPhotonSelector::GetSTT()
{
  if(fReader==NULL) return -100;
  THEADERClass* header = fReader->GetHEADER();
  if(header==NULL) return -100;
  return header->GetSTT();
}

void   TCTPhotonSelector::FindBestPhoton()
{

  TString  fReaderType = fReader->GetReaderType();
  //  printf("[%s]\n",fReaderType.Data());
  if(strncmp(fReaderType.Data(),"ROOTMINIDSTR",12)==0){
    //    printf("This is a miniDST Reader.....ahhhaaaa...\n");
    TMiniHEADClass *ptr_head = (TMiniHEADClass *) fReader->GetBankRow("HEADER",0);
    fPhotonEID     = ptr_head->Beam_EID;
    fPhotonDt      = ptr_head->Beam_DT;
    fPhotonEnergy  = ptr_head->Beam_E;
    return;
  }



  SetAllFalse();

  Int_t N_TAGR = fReader->GetNRows( "TAGR" );
  //  printf("NTAGR = %d\n",N_TAGR);
  if(N_TAGR<1) return;

  double  best_time_diff = 100;
  double  starttime      = GetSTT();
  for(int idx=0;idx<N_TAGR;idx++){
    TTAGRClass* tagr = static_cast<TTAGRClass*>( fReader->GetBankRow( "TAGR", idx ) );
    Double_t   tagtime = tagr->GetTagTime();
    Double_t   current_time_diff = tagtime - starttime;
    if(fabs(current_time_diff)<best_time_diff){
      best_time_diff = fabs(current_time_diff);
      fPhotonEnergy  = tagr->GetEnergy();
      fPhotonEID     = tagr->GetEid();
      fPhotonTID     = tagr->GetTid();
      fPhotonDt      = current_time_diff;
    }
  }
}

void       TCTPhotonSelector::SetAllFalse()
{
  fStartTime = -100;
  fPhotonDt  = -100;
  fPhotonEnergy = -100;
  fPhotonEID    = -1;
  fPhotonTID    = -1;
}
