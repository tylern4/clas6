// Autogenerated Class (Source File)
// Author : G.Gavalian
// Date   : Sun Apr  1 20:42:16 EDT 2007
//

#include "TCTStringUtils.h"


TCTStringUtils::TCTStringUtils (){

}

TCTStringUtils::~TCTStringUtils (){

}

//-----------------
//-----------------
//-----------------


TString   TCTStringUtils::PullStr(TString *fstr, const char c )
{
  TString  strret;
  TString::EStripType s = TString::kBoth;

  (*fstr) = fstr->Strip(s,c);

  if(fstr->Length()==0){
    strret = "";
    return strret;
  }
  char  c_char_sep[3];
  sprintf(c_char_sep,"%c",c);
  int indx = fstr->Index(c_char_sep);

  if(fstr->Length()>0&&indx<0){
    strret = (*fstr);
    (*fstr) = "";
    return strret;
  }


  if(fstr->Data()[0]=='\''||fstr->Data()[0]=='\"'){
    char cc2[3];
    sprintf(cc2,"%c",fstr->Data()[0]);
    printf("string detected\n");
    int indx2 = fstr->Index(cc2,1,1,TString::kExact);
    printf("next one is at %d\n",indx2);
    if(indx2<1) {
      strret = "";
      printf("SYNTAX ERROR: unmatched commas \n line : %s\n",fstr->Data());
      (*fstr) = "";
      return strret;
      
    }
    
    TString  sb1 = GetSubstring((*fstr),1,indx2-2);
    TString  se1 = GetSubstring((*fstr),indx2+1,fstr->Length()-indx2-1);
    (*fstr) = se1.Data();
    return sb1;
    
  }
 
  TString  sbeg = GetSubstring((*fstr),0,indx-1);
  TString  send = GetSubstring((*fstr),indx+1,fstr->Length()-indx-1);
  (*fstr) = send.Data();
  
  return  sbeg;
}

void      TCTStringUtils::PushStr(TString pstr, TString *fstr, const char c)
{

}
int       TCTStringUtils::GetCount(TString _astr,char __crt)
{
  const char *_astr_ptr = _astr.Data();
  int  _t_count = 0;
  for(int ii=0;ii<_astr.Length();ii++){
    if(_astr_ptr[ii]==__crt) _t_count++;
  }
  return _t_count;
}
TString   TCTStringUtils::GetSubstring(TString  a, int start , int len)
{
  int   alen    = a.Length();
  const char *strbuff = a.Data();
  int   spos     = start;
  int   cpos     = 0;
  while(cpos<127&&spos<alen&&cpos<=len){
    cbuff[cpos] = a[spos];
    cpos++; spos++;
  }
  
  cbuff[cpos] = '\0';
  TString  bb = cbuff;
  return bb;
}

