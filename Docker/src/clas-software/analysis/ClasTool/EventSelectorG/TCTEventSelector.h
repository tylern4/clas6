// Autogenerated Class (Header File)
// Author : G.Gavalian
// Date   : Tue Mar 27 12:58:44 EST 2007
//

#ifndef __TCTEventSelector__
#define __TCTEventSelector__
#include <iostream>
#include <TROOT.h>
#include <TVector3.h>
#include <TObject.h>
#include <TCTParticle.h>
#include <TCTCompositeParticle.h>
#include <TCTPhotonSelector.h>
#include <TCTVector.h>
#include <TCTVariable.h>
#include <TNtuple.h>
#include <TArrayF.h>
#include "TCTStringUtils.h"
#include "TCTTextReader.h"
#include "TDSTReader.h"
#include "TDatabasePDG.h"
#include "TParticlePDG.h"
#include "TCTOperations.h"
#include "TCTContainer.h"
#include "TCTBeamSelector.h"
#include "TCTVirtualParticleCorrections.h"
#include <TGProgressBar.h>
#include <TXMLEngine.h>

#define MAX_REACT_PART     2
#define MAX_PRODUCT_PART   10

#define kaEVNT    1077
#define kaGSIM    1078

typedef  struct {
  int     lund_id;
  string  name;
  double  mass;
} TReactionParticle_t;


class TCTEventSelector {

private:

  TNtuple    *fNT;
  char       fLineBuffer[4096];
  TObjArray  *fVectArray;
  TObjArray  *fVarArray;

  TString     fReaction;
  TString     fProducts;

  TXMLEngine   fXMLEngine;

  TVirtualReader   *fReader;
  TCTBeamSelector  *fBeamSelector;
  TCTContainer     *fEvtContainer;

  Int_t           fNReactionParticles;
  TLorentzVector  vl_React[MAX_REACT_PART];
  TLorentzVector  vl_Products[MAX_PRODUCT_PART];

  TReactionParticle_t   fParticleList[MAX_PRODUCT_PART];
  TDatabasePDG          fPDGData;
  TCTPhotonSelector     fPhotonSel;
  TCTContainer         *fPartContainer;

  TString        fReactionVertexPart;
  TArrayF        fNtupleBuff;
  TCTStringUtils fStrUtils;
  TString        fReactionVertex[2];
  TCTOperations  fVectOperations;
  Int_t          fExclusiveFlag[2];

  TArrayI        fParticleID;
  TArrayI        fParticleIDFlag;

  Int_t          fIsDataSimulation;
  Int_t          fBeamType;
  Int_t          fBankToAnalyse;
  TString        fEVENTBankName;

  TString        fInputDataFile;
  TString        fOutputNtupleName;
  TString        fTmpStr;

public:

TCTEventSelector ();
~TCTEventSelector ();

 void   InitNtuple();
 void   FillNtuple();
 void   SaveNtuple();

 void   Init();

 TVector3        GetInteractionVertex();
 TLorentzVector  GetLorentzVector(const char *partname, int physevent = 0);
 TVector3        GetVertexVector(const char *partname, int physevent = 0);
 Int_t           GetNParticle(int _id);

 void            Run(int n_events = 20000, int skip = 0, TGProgressBar *_ptr_bar = NULL);

 void            LoadXMLConfig(const char *_xml_file);
 void            _XML_LoadSelector(XMLNodePointer_t node);
 void            SetDataType(int type = 0) {fIsDataSimulation = type;};

 TCTBeamSelector *GetBeamSelector(){return fBeamSelector;};
 TCTContainer    *GetEventContainer(){return fEvtContainer;};

 void   SetReader(TVirtualReader *_frdr){fReader = _frdr;fBeamSelector->SetReader(_frdr);};
 void   SetContainer(TCTContainer *_pcont){fPartContainer = _pcont;};

 void   SetReactionVertex(const char *_p1,const char *_p2){fReactionVertex[0] = _p1;fReactionVertex[1] = _p2;};
 
 void   SetExclusiveFlag(int  ch_accept, int ntr_accept)
 {
   fExclusiveFlag[0]=ch_accept;
   fExclusiveFlag[1]=ntr_accept;
 };


 void   Draw(const char *_var_name, const char *_opt = "");

 Int_t  ConstructEvent();
 Int_t  IsSimParticle(const char *_name);

 Int_t  ConstructParticles();
 Int_t  ConstructSpecial();

 Int_t  GetNCharged();
 Int_t  GetNNeutral();
 Int_t  Pattern(const char *pattern_, int extra_ch = -1, int extra_ntr = -1);

 void   Print();

 void   PrintEvent();
 // void  SetReaction(const char *_incm,const char *_outg);
 
 // void  AddCompositeParticle(const char *pname, const char *formulae, double  pmass);

 // int    Pattern(const char *__str_pat, int excl_flag_ch = -1, int excl_flag_neutral = -1);

};
#endif
