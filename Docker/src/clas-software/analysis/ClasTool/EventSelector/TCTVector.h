// Autogenerated Class (Header File)
// Author : G.Gavalian
// Date   : Tue Mar 27 16:45:59 EST 2007
//

#ifndef __TCTVector__
#define __TCTVector__
#include <iostream>
#include <TROOT.h>
#include <TVector3.h>
#include <TObject.h>
#include <TLorentzVector.h>
#include <TCTParticle.h>
#include <TObjArray.h>
#include  "TCTOperations.h"

#define   CTVEC_STATIC    45
#define   CTVEC_VIRTUAL   46
#define   CTVEC_PARTICLE  47

class TCTVector : public TNamed {

private:

  TObjArray  *fObjects;
  Int_t     fVECT_Type;
  TString   fVECT_Name;
  TLorentzVector  fVect;
  TString         fOperVects[10];
  TLorentzVector  fOperBuff[10];
  TString   fPartName_1;
  TString   fPartName_2;
  TString   fOperation;
  TCTOperations  fOper;
  Int_t          fNOperand;

public:

  TCTVector (const char *name,TLorentzVector v);
  TCTVector (const char *name,const char *partname);
  TCTVector (const char *name,const char *oper,const char *part1,const char *part2);
  

~TCTVector ();

 void  SetContainer(TObjArray *arr){fObjects = arr;};
 void  SetVector(double px,double py,double pz,double e){fVect.SetPxPyPzE(px,py,pz,e);};
 void  SetVector(TVector3 v,double m){fVect.SetVectM(v,m);};
 void  Set(TLorentzVector vl){fVect = vl;};
 void  SetOperVect(int kk, const char *name){if(kk>=0&&kk<10) fOperVects[kk] = name;};
 void  SetNVect(int jj){fNOperand = jj;};

 TLorentzVector GetV();
 TVector3       GetV3(){return GetV().Vect();};
 Double_t       Get(const char *name);

 void       Fill(TObjArray *farr, const char *system);
 void       DoOperation(TLorentzVector v1,TLorentzVector v2);

 TLorentzVector GetPartVector(const char *name);
 TString get_name(){return fVECT_Name;};

 void    Print();
 void    PrintV();

ClassDef(TCTVector,1)

};
#endif
