// Autogenerated Class (Header File)
// Author : G.Gavalian
// Date   : Thu Dec  6 13:49:37 EST 2007
//

#ifndef __TCTContainer__
#define __TCTContainer__
#include <iostream>
#include <TROOT.h>
#include <TVector3.h>
#include <TObject.h>
#include <iostream>
#include <TROOT.h>
#include <TVector3.h>
#include <TObject.h>
#include <TCTParticle.h>
#include <TCTCompositeParticle.h>
#include <TCTPhotonSelector.h>
#include <TCTVector.h>
#include <TCTVariable.h>
#include <TNtuple.h>
#include <TArrayF.h>
#include "TCTStringUtils.h"
#include "TCTTextReader.h"
#include "TDSTReader.h"
#include "TDatabasePDG.h"
#include "TParticlePDG.h"
#include "TCTOperations.h"
#include <TXMLEngine.h>

#define MAX_PART  15

class TCTContainer : public TObject {

private:

  TObjArray  *fParticleArray;
  TObjArray  *fCompositeParticleArray;
  TObjArray  *fVectorArray;
  TObjArray  *fVariableArray;
  TCTStringUtils  fStrUtils;
  //  TCTGenParticle  fArrayPart[MAX_PART];
  TLorentzVector   fVectBuff[MAX_PART];
  TVector3         fVertBuff[MAX_PART];
  TDatabasePDG   fPDGData;

  TXMLEngine    fXMLEngine;

public:

TCTContainer ();
~TCTContainer ();

 void   AddParticle(const char *pname, const char *ppdgname, int part_pdg, double part_mass);
 void   AddParticle(const char *pname, const char *ppdgname);

 void   AddCompositeParticle(const char *pname, const char *formulae, double pmass, int  _usepdgmass = -1);
 void   AddVariable(const char *vname,const char *system, const char *system_var);
 void   AddVariable(const char *vname, double _val=1000.);
 void   AddVector(const char *pname, const char *_oper);
 void   SetVariableCuts(const char *vname, double __lo, double __hi);

 TLorentzVector   GetPartVectorByName(const char *pname);

 TCTGenParticle   *GetParticleByName(const char *pname);
 TCTVariable      *GetVariableByName(const char *name);
 TCTVector        *GetVectorByName(const char *name);

 TString           GetVariableList();
 void              GetVariableBuff(TArrayF *fBuff);
 TString           GetVariableString(const char *format = "%9.5f");
 
 Double_t         GetVariable(const char *vname);
 Int_t            GetNParticles();

 TCTGenParticle  *GetParticleByIndex(int __idx);

 Int_t            GetNElements(const char *_src);
 TString          GetElementName(const char *_src, int _idx);

 Int_t            ConstructComposite();
 Int_t            ConstructParticles();
 Int_t            ConstructCompositeParticle(TCTCompositeParticle *cp_part);
 Int_t            ConstructVariables();
 Int_t            ConstructVectors();

 Int_t            GetStatus(const char *_system = "Particles");
 Int_t            GetStatusVariables();

 void             ClearAll();
 void             Reset();

 void             SetReactionVertex(const char *_np1, const char *_np2);
 void             SetPartByReaction(const char *_pinitial, const char *_pfinal);
 void             SetReaction(const char *_pinitial);

 void             SetParticle(const char *pname, TLorentzVector __v1, TVector3  __vrt);
 void             SetVariable(const char *vname, double __val, int errmsg = 0);
 Int_t            Status();

 void             SaveConfig(const char *_cfg_file);
 void             LoadConfig(const char *_cfg_file);

 void             LoadXMLConfig(const char *_xml_file);
 void             _XML_LoadParticles( XMLNodePointer_t node);
 void             _XML_LoadVariables( XMLNodePointer_t node);
 void             _XML_LoadComposite( XMLNodePointer_t node);
 void             _XML_LoadVectors( XMLNodePointer_t node);
 // TString          _XML_FindAttribute(const char *_attr_name, XMLNodePointer_t node);

 void             SaveXMLConfig(const char *_xml_file);

 void       Print(const char *opt="PCV");
 void       PrintParticle(const char *_pname);
 void       UpdateInteractionVertex();
 void       UpdateInteractionVertex(TVector3  _ivert);
 int        EvaluateCommand(const char *__cmd);


 ClassDef(TCTContainer,1)


};
#endif
