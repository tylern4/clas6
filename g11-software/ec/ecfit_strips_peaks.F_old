      SUBROUTINE EcFit_strips_peaks(axis,layer,sector)
*...............................................................
*
*- Finds 1st iteration of peaks from strip energies for a given
*- axis, layer and sector.  Patch in a guess for "DIM" strips.
*
*  Inputs: axis   -      edge of Ec ( Ec_U, Ec_V, Ec_W)
*           layer  -     layer of Ec ( inner or  outer)
*           sector -     CLAS sector (1-6)
*
* created Z.Li 2/21/95   replace ecfitedge1st_strips_peaks by Kevin
*...............................................................
      IMPLICIT NONE
      SAVE
c rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rsc rcs rcs rcs
c rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rsc rcs rcs rcs
c                                                                         rcs
c  RCS information:                                                       rcs
c                                                                         rcs
      CHARACTER*132  CFILE, CREVIS, CSTATE, CDATE, CAUTHO, CRCSID
      PARAMETER (CFILE = '$RCSfile: ecfit_strips_peaks.F_old,v $') 
      PARAMETER (CREVIS = '$Revision: 1.1 $')
      PARAMETER (CSTATE = '$State: Exp $')
      PARAMETER (CDATE = '$Date: 1997/10/23 20:50:47 $')
      PARAMETER (CAUTHO = '$Author: boiarino $')
      DATA CRCSID/ 
     1'$Id: ecfit_strips_peaks.F_old,v 1.1 1997/10/23 20:50:47 boiarino Exp $'
     2/ 
c  Module information: 
      CHARACTER*(*)  CRNAME, CRAUTH
      CHARACTER*100  CRMESS
      PARAMETER (CRNAME='ecfit_strips_peaks')                                   
      PARAMETER (CRAUTH='Zhujun Li')
c                                                                         rcs
c rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rsc rcs rcs rcs
c rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rcs rsc rcs rcs rcs
c
*
#include "Ec_general.PAR"
#include "EcStrip.CMN"
#include "ecgeom.inc"
#include "EcFit_general.CMN"
#include "EcFit_edge.CMN"
#include "ec_control.inc"
*
      integer axis,layer,sector
*
      real naught
      parameter (naught= 0.0)
*
*- working strip arrays
      integer stripID,nghit
      real strip(ENERGY:DIM,0: MAXstrips+1)   !local use only
*
      integer MAXgroups
      parameter (MAXgroups= MAXstrips/2+1)
      real group_E(MAXgroups)
      integer Ngroup,IG,groupN(MAXgroups),id_g(MAXgroups)
      integer groupID( MAXstrips,MAXgroups)
*
      integer id,mth,nth,pth,ith
      integer member,chrctr
      real sum(ENERGY:DIM),dprj,sumEprj,sumEprj2,sumEprj3,dE,cntrd,swid,sum_wt
      real ec_b_thrid(MAXstrips,Ec_u:Ec_w,whole:outer,MAXsectors)
      integer ec_b_thrN(Ec_u:Ec_w,whole:outer,MAXsectors)
      logical touch
*
*
*- initialize below threshold strip # counter
*
      ith=0
*
*- build "groups" out of strips
*
      swid= Ec_edge_L(axis,layer,sector)/ MAXstrips
*
*- form "groups" of strips
      Ngroup=0    !first group
      member=0
      id=-1      ! artificial so not touch with any strip
*
*-check to see if this strip touches one or more existing groups
*
      DO mth=1,Ec_stripN(axis,layer,sector)
        stripID= Ec_stripID(mth,axis,layer,sector)  !id# of strip 
        do chrctr =energy,time
         strip(chrctr,stripID)
     &           =Ec_strip(chrctr,stripID,axis,layer,sector)
        enddo
        if(strip(energy,stripID).lt.EcFitEdge_strip_threshold) then
          ith=ith+1
          Ec_b_thrID(ith,axis,layer,sector)=stripID !strip # below threshold
          go to 5
        endif
        touch=(stripID-id).le.1
        id=stripID
        if(touch) then
          member=member+1
        else
          member=1
          Ngroup=Ngroup+1
        endif
          groupN(Ngroup)=member
          groupID(member,Ngroup)=stripID
5     continue
      ENDDO 
      Ec_b_thrN(axis,layer,sector)=ith  ! number of strips energy below threshold
*
*- now have "groups" of strips; find ordering according to decreasing size
      DO mth= 1,Ngroup
         group_E(mth)= 0.                            !initialize sum
         Do nth= 1,groupN(mth)
            stripID= groupID(nth,mth)
            group_E(mth)= group_E(mth) + Strip(ENERGY,stripID)
         EndDo
      ENDDO
*
*- sort by decreasing size and set minimum size
      call EcGus_sort(Ngroup,group_E,id_g)
      Nghit=0
      DO mth=1,Ngroup
        If(group_E(id_g(mth)).lt.EcFitEdge_peak_threshold) go to 89 !above thre+
        Nghit= Nghit+1                                          !#
      ENDDO
*
89    continue
      Nghit= MIN(Nghit, MAXpeaks)
*
*- load "groups" into "peaks" as initial guess
      EcFit_Npeak(axis,layer,sector)= Nghit           !total number of peaks
*
      DO pth= 1,Nghit                 !peak made from "pth" sorted group
         IG= id_g(pth)
         Do chrctr= ENERGY,DIM
           sum(chrctr)= 0.              !clear counters
         EndDo
         sumEprj= 0.
         sumEprj2= 0.
         sumEprj3= 0.
*
*- keep number of strips assigned to peak
*
         Do nth= 1,groupN(IG)
*
           id= groupID(nth,IG)
           sum(time)= strip(time,id)+sum(time)
           dE= strip(ENERGY,id)
           dprj= id*swid-swid/2.     ! position of the strip
*
           sumEprj= sumEprj + dE*dprj
           sumEprj2= sumEprj2 + dE*dprj*dprj
           sumEprj3= sumEprj3 + dE*dprj*dprj*dprj
*
           EcFit_peak_strip(nth,pth,axis,layer,sector)=
     &                                  groupID(nth,IG)   !keep strip id
           EcFit_stripE(nth,pth,axis,layer,sector)=
     &                    strip(energy,groupid(nth,IG))   !keep strip energy
*
         EndDo
*
         EcFit_peak_Nstrip(pth,axis,layer,sector)= groupN(IG)	! # of strips in the group
         sum_wt=real(groupN(IG))                                ! # of strips in the group
         EcFit_peak(ENERGY,pth,axis,layer,sector)= group_E(IG)    !area
         EcFit_peak(TIME,pth,axis,layer,sector)= sum(TIME)/sum_wt !av. time
         EcFit_peak(DARK,pth,axis,layer,sector)= sum(DARK)       !dark energy
         EcFit_peak(FEY,pth,axis,layer,sector)= sum(FEY)/sum_wt  !frac. fey
         EcFit_peak(DIM,pth,axis,layer,sector)= sum(DIM)                 !total
*
*-centroid
         cntrd= sumEprj/group_E(IG)                 !av. position (first moment)
*
*-set RMS width
        if(groupN(IG).gt.1)then
          EcFit_peak(WIDTH,pth,axis,layer,sector)=
     &         SQRT(sumEprj2/group_E(IG)-cntrd**2)
        elseif(groupN(IG).eq.1)then
          EcFit_peak(WIDTH,pth,axis,layer,sector)=swid/SQRT(12.)
        endif
*
         EcFit_peak(DIST,pth,axis,layer,sector)= cntrd  !position on edge
*
      ENDDO                                     !over groups
*
99    RETURN
      END
